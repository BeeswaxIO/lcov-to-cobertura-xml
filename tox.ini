[tox]
envlist = py3{6,7,8,9}-cov-{linux,macos,windows}
skip_missing_interpreters = true
skipsdist = True

[pycodestyle]
max-line-length = 84

[pytest]
minversion = 5.4

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[testenv]

whitelist_externals =
    {tests,cov}: bash

passenv =
    pythonLocation
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE
    VERBOSE
    SSH_AUTH_SOCK

# pre-commit may also need `http_proxy https_proxy no_proxy` in passenv
# if run behind fw and proxy is required

deps =
    pip>=20.0.1
    pre: pre-commit
    build: setuptools
    build: build
    build: twine
    {diff,black,format}: ffffff
    lint: pylint
    style: pycodestyle
    style: flake8
    sec: bandit
    #{lint,sec,style}: -r requirements.txt

setenv = PYTHONPATH={toxinidir}

commands_pre =
    {tests,cov}: python -m pip install -U pip
    {tests,cov}: python -m pip install .[test,cov]

commands =
    diff: ffffff -v --diff lcov_cobertura/lcov_cobertura.py test/test_lcov_cobertura.py
    black: ffffff -v --check lcov_cobertura/lcov_cobertura.py test/test_lcov_cobertura.py
    format: ffffff -v lcov_cobertura/lcov_cobertura.py test/test_lcov_cobertura.py
    build: python -m build .
    build: twine check dist/*
    tests: py.test -v --capture=no --cov lcov_cobertura --cov-report term-missing
    cov: py.test -v --capture=no --cov lcov_cobertura --cov-branch --cov-report term-missing
    #cov: coverage xml
    #cov: bash -c 'scripts/fix_pkg_name.sh'
    lint: pylint --fail-under=6.00 lcov_cobertura/
    sec: bandit lcov_cobertura
    style: flake8 lcov_cobertura
    style: pycodestyle lcov_cobertura
    pre: pre-commit run --all-files --show-diff-on-failure
